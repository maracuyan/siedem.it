name: Auto Create and Merge PR

on:
  workflow_run:
    workflows: ["Deploy Preview"] # Assumes this is the correct name
    types:
      - completed

jobs:
  create_and_automerge_pr:
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'success'
    permissions:
      contents: write      # Needed to create PR, merge the PR and delete the branch
      pull-requests: write # Needed to create PR, interact with the PR (read details, merge)
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }} # GitHub CLI prefers GH_TOKEN
      REPO_NAME: ${{ github.repository }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4 # Updated to v4

      - name: Set up Python
        uses: actions/setup-python@v4 # Updated to v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: pip install PyGithub

      - name: Determine Branches
        id: branches
        run: |
          echo "head_branch=${{ github.event.workflow_run.head_branch }}" >> $GITHUB_OUTPUT
          echo "base_branch=main" >> $GITHUB_OUTPUT
          echo "head_sha=${{ github.event.workflow_run.head_sha }}" >> $GITHUB_OUTPUT
          echo "workflow_run_id=${{ github.event.workflow_run.id }}" >> $GITHUB_OUTPUT

      - name: Check for Existing PR
        id: existing_pr
        run: |
          HEAD_BRANCH="${{ steps.branches.outputs.head_branch }}"
          BASE_BRANCH="${{ steps.branches.outputs.base_branch }}"
          PR_NUMBER=$(gh pr list --head "$HEAD_BRANCH" --base "$BASE_BRANCH" --state open --json number --jq '.[0].number // ""')
          if [[ -n "$PR_NUMBER" ]]; then
            echo "Found existing PR #$PR_NUMBER for $HEAD_BRANCH -> $BASE_BRANCH."
            echo "pr_number=$PR_NUMBER" >> $GITHUB_OUTPUT
            echo "pr_created=false" >> $GITHUB_OUTPUT
          else
            echo "No existing PR found for $HEAD_BRANCH -> $BASE_BRANCH. Will create one."
            echo "pr_number=" >> $GITHUB_OUTPUT # Ensure it's empty if no PR found
            echo "pr_created=true" >> $GITHUB_OUTPUT
          fi
        env:
          GH_REPO: ${{ github.repository }} # gh cli needs this

      - name: Create Pull Request if Needed
        id: create_pr
        if: steps.existing_pr.outputs.pr_created == 'true'
        run: |
          HEAD_BRANCH="${{ steps.branches.outputs.head_branch }}"
          BASE_BRANCH="${{ steps.branches.outputs.base_branch }}"
          HEAD_SHA="${{ steps.branches.outputs.head_sha }}"
          WORKFLOW_RUN_ID="${{ steps.branches.outputs.workflow_run_id }}"

          # Check if there are any unique commits in the head branch
          UNIQUE_COMMITS=$(git rev-list --count $BASE_BRANCH..$HEAD_BRANCH)
          if [[ "$UNIQUE_COMMITS" -eq 0 ]]; then
            echo "No unique commits found in $HEAD_BRANCH compared to $BASE_BRANCH. Skipping PR creation."
            echo "pr_number=" >> $GITHUB_OUTPUT
            exit 0
          fi

          TITLE="Auto-PR: Merge $HEAD_BRANCH to $BASE_BRANCH after successful Deploy Preview"
          BODY="This PR was automatically created after the 'Deploy Preview' workflow (run #$WORKFLOW_RUN_ID) succeeded for commit $HEAD_SHA on branch $HEAD_BRANCH."

          echo "Creating PR: $TITLE"
          PR_URL=$(gh pr create --title "$TITLE" --body "$BODY" --head "$HEAD_BRANCH" --base "$BASE_BRANCH" --repo "$GH_REPO")
          if [[ -z "$PR_URL" ]]; then
            echo "Failed to create PR."
            exit 1
          fi
          echo "PR created: $PR_URL"
          # Extract PR number from URL (e.g., https://github.com/owner/repo/pull/123)
          PR_NUMBER=$(echo "$PR_URL" | grep -oE '[0-9]+$')
          echo "pr_number=$PR_NUMBER" >> $GITHUB_OUTPUT
        env:
          GH_REPO: ${{ github.repository }}

      - name: Determine PR Number for Automerge
        id: pr_info
        run: |
          if [[ "${{ steps.existing_pr.outputs.pr_created }}" == "true" ]]; then
            echo "Using newly created PR: ${{ steps.create_pr.outputs.pr_number }}"
            echo "pr_number=${{ steps.create_pr.outputs.pr_number }}" >> $GITHUB_OUTPUT
          else
            echo "Using existing PR: ${{ steps.existing_pr.outputs.pr_number }}"
            echo "pr_number=${{ steps.existing_pr.outputs.pr_number }}" >> $GITHUB_OUTPUT
          fi

      - name: Run automerge script
        if: steps.pr_info.outputs.pr_number != '' # Only run if we have a PR number
        env:
          PR_NUMBER: ${{ steps.pr_info.outputs.pr_number }}
          # GITHUB_REPOSITORY is already in global env as REPO_NAME, but automerge.py expects GITHUB_REPOSITORY
          GITHUB_REPOSITORY: ${{ env.REPO_NAME }}
        run: |
          echo "Attempting to automerge PR #$PR_NUMBER"
          python .github/scripts/automerge.py
